###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        21/Feb/2015  16:28:06
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\arm_mote\FEAT_Queuing\Q_Droptail.c
#    Command line =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\arm_mote\FEAT_Queuing\Q_Droptail.c
#        -D USE_STDPERIPH_DRIVER -D USE_MB_SNT_X2 -D STM32W108CB -D
#        "PLATFORM_HEADER=\"Utilities\STM32W108xx_HAL_Driver/micro/cortexm3/compiler/iar.h\""
#        -D CORTEXM3 -D CORTEXM3_STM32W108 -D CORTEXM3_STM32W108xB -D
#        DISABLE_WATCHDOG -D "__SOURCEFILE__=\"Q_Droptail.c\"" -lC
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\List\
#        --diag_suppress Pa050 -o
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\arm_mote\FEAT_Queuing\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\cortexm3\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\cortexm3\stm32w108\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\generic\compiler\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\cortexm3\bootloader\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\Shared\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\CMSIS\Include\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\STM32W108xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\CMSIS\Device\ST\STM32W108xx\Include\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\SimpleMAC\Include\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32_EVAL\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32_EVAL\MB851\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\arm_mote\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\List\Q_Droptail.lst
#    Object file  =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\Obj\Q_Droptail.o
#
###############################################################################

C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\arm_mote\FEAT_Queuing\Q_Droptail.c
      1          /****************************************************************************
      2          **
      3          ** Copyright (C) 2006-2005 Maciej Zawodniok, James W. Fonda. All rights reserved.
      4          **
      5          ** This file is part of the documentation of the UMR Mote Toolkit.
      6          **
      7          ** This file may be used under the terms of the GNU General Public
      8          ** License version 2.0 as published by the Free Software Foundation
      9          ** and appearing in the file LICENSE.GPL included in the packaging of
     10          ** this file.
     11          **
     12          ** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
     13          ** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
     14          **
     15          ****************************************************************************/
     16          #ifndef _Q_DROPTAIL_C_
     17          #define _Q_DROPTAIL_C_
     18          
     19          
     20          //Queuing Code for ADFS
     21          
     22          #include "common.h"
     23          #include "HW_LIB/RTC.h"
     24          #include "Queuing.h"
     25          //#include "Q_Droptail.h"
     26          
     27          
     28          //**********************
     29          //Define Variables
     30          
     31          

   \                                 In section .bss, align 4
     32          uint8_t XDATA Q_table[QSIZE];
     33          uint8_t XDATA Q_head;
   \                     Q_head:
   \   00000000                      DS8 1
     34          uint8_t XDATA Q_tail;
   \                     Q_tail:
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \                     Q_table:
   \   00000004                      DS8 12
     35          
     36          
     37          
     38          //Define Q-Buffers
     39          //char xdata buffer0[SIZE_Q_BUFF * NUMQBUFFS] _at_ Data_Begin0;
     40          //char buffer0[SIZE_Q_BUFF * NUMQBUFFS];
     41          
     42          //**********************
     43          
     44          //Function Section
     45          
     46          //Function to Init the Buffer Pointer Table

   \                                 In section .text, align 2, keep-with-next
     47          void que_Droptail_init( void )
     48          {
     49          	uint8_t k1;
     50          	Q_tail = 0;
   \                     que_Droptail_init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x7041             STRB     R1,[R0, #+1]
     51          	Q_head = 0;
   \   00000006   0xF800 0x1B04      STRB     R1,[R0], #+4
     52          	for ( k1 = 0; k1 < QSIZE; k1++ )
     53          	{
     54          		Q_table[k1] = 0xFF;
   \   0000000A   0x22FF             MOVS     R2,#+255
   \   0000000C   0x2109             MOVS     R1,#+9
   \   0000000E   0x.... 0x....      B.W      __aeabi_memset4
     55          	}
     56          }
     57          //**********************
     58          
     59          
     60          
     61          //**********************
     62          
     63          //Function to check Q utilization

   \                                 In section .text, align 2, keep-with-next
     64          int que_Droptail_utilization( void )
     65          {
     66          	int16_t ret;
     67          	ret = ( int ) Q_head - Q_tail;
   \                     que_Droptail_utilization: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3
   \   00000002   0x7801             LDRB     R1,[R0, #+0]
   \   00000004   0x7840             LDRB     R0,[R0, #+1]
   \   00000006   0x1A08             SUBS     R0,R1,R0
     68          	if ( ret < 0 )
   \   00000008   0xBF48             IT       MI 
   \   0000000A   0x3009             ADDMI    R0,R0,#+9
     69          	{
     70          		ret = QSIZE + ret;
     71          	}
     72          	return ret;
   \   0000000C   0x4770             BX       LR               ;; return
     73          }
     74          //**********************
     75          
     76          //Function to enQ a packet from index number

   \                                 In section .text, align 2, keep-with-next
     77          uint8_t que_Droptail_enqueue ( uint8_t index )
     78          {
   \                     que_Droptail_enqueue: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
     79          	if ( que_Droptail_utilization() < QSIZE - 1 )
   \   00000004   0x.... 0x....      BL       que_Droptail_utilization
   \   00000008   0x2808             CMP      R0,#+8
   \   0000000A   0xDA0B             BGE.N    ??que_Droptail_enqueue_0
     80          	{
     81          		Q_table[Q_head] = index;
   \   0000000C   0x....             LDR.N    R0,??DataTable3
   \   0000000E   0x7801             LDRB     R1,[R0, #+0]
   \   00000010   0x180A             ADDS     R2,R1,R0
     82          		Q_head++;
   \   00000012   0x1C49             ADDS     R1,R1,#+1
     83          		if ( QSIZE <= Q_head )
   \   00000014   0xB2C9             UXTB     R1,R1
   \   00000016   0x2909             CMP      R1,#+9
   \   00000018   0x7114             STRB     R4,[R2, #+4]
   \   0000001A   0xBFA8             IT       GE 
   \   0000001C   0x2100             MOVGE    R1,#+0
     84          		{
     85          			Q_head = 0;
   \   0000001E   0x7001             STRB     R1,[R0, #+0]
     86          		}
     87          		return 1;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xBD10             POP      {R4,PC}
     88          	}
     89          	else
     90          		return 0;
   \                     ??que_Droptail_enqueue_0: (+1)
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
     91          }
     92          //**********************
     93          
     94          //Function to deQ a packet that has been sent

   \                                 In section .text, align 2, keep-with-next
     95          unsigned char que_Droptail_dequeue()
     96          {
   \                     que_Droptail_dequeue: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     97          	uint8_t index;
     98          	if ( 0 < que_Droptail_utilization() )
   \   00000002   0x.... 0x....      BL       que_Droptail_utilization
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xDB0A             BLT.N    ??que_Droptail_dequeue_0
     99          	{
    100          		index = Q_table[Q_tail];
   \   0000000A   0x....             LDR.N    R1,??DataTable3
   \   0000000C   0x784A             LDRB     R2,[R1, #+1]
   \   0000000E   0x1850             ADDS     R0,R2,R1
    101          		Q_tail++;
   \   00000010   0x1C52             ADDS     R2,R2,#+1
    102          		if ( QSIZE <= Q_tail )
   \   00000012   0xB2D2             UXTB     R2,R2
   \   00000014   0x7900             LDRB     R0,[R0, #+4]
   \   00000016   0x2A09             CMP      R2,#+9
   \   00000018   0xBFA8             IT       GE 
   \   0000001A   0x2200             MOVGE    R2,#+0
    103          			Q_tail = 0;
   \   0000001C   0x704A             STRB     R2,[R1, #+1]
    104          		return index;
   \   0000001E   0xBD02             POP      {R1,PC}
    105          	}
    106          	else
    107          		return NO_PACKET_INDEX;
   \                     ??que_Droptail_dequeue_0: (+1)
   \   00000020   0x20FF             MOVS     R0,#+255
   \   00000022   0xBD02             POP      {R1,PC}          ;; return
    108          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     Q_head
    109          //**********************
    110          
    111          
    112          
    113          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   que_Droptail_dequeue
         8   -> que_Droptail_utilization
       8   que_Droptail_enqueue
         8   -> que_Droptail_utilization
       0   que_Droptail_init
         0   -> __aeabi_memset4
       0   que_Droptail_utilization


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
      16  Q_head
          Q_tail
          Q_table
      36  que_Droptail_dequeue
      40  que_Droptail_enqueue
      18  que_Droptail_init
      14  que_Droptail_utilization

 
  16 bytes in section .bss
 112 bytes in section .text
 
 112 bytes of CODE memory
  16 bytes of DATA memory

Errors: none
Warnings: none
