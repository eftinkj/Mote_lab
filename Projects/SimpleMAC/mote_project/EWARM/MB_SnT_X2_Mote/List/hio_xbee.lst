###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        21/Feb/2015  16:26:53
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\arm_mote\FEAT_HIO\hio_xbee.c
#    Command line =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\arm_mote\FEAT_HIO\hio_xbee.c
#        -D USE_STDPERIPH_DRIVER -D USE_MB_SNT_X2 -D STM32W108CB -D
#        "PLATFORM_HEADER=\"Utilities\STM32W108xx_HAL_Driver/micro/cortexm3/compiler/iar.h\""
#        -D CORTEXM3 -D CORTEXM3_STM32W108 -D CORTEXM3_STM32W108xB -D
#        DISABLE_WATCHDOG -D "__SOURCEFILE__=\"hio_xbee.c\"" -lC
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\List\
#        --diag_suppress Pa050 -o
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\arm_mote\FEAT_HIO\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\cortexm3\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\cortexm3\stm32w108\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\generic\compiler\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\cortexm3\bootloader\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\Shared\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\CMSIS\Include\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\STM32W108xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\CMSIS\Device\ST\STM32W108xx\Include\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\SimpleMAC\Include\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32_EVAL\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32_EVAL\MB851\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\arm_mote\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\List\hio_xbee.lst
#    Object file  =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\Obj\hio_xbee.o
#
###############################################################################

C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\arm_mote\FEAT_HIO\hio_xbee.c
      1          
      2          /****************************************************************************
      3          **	Includes (PRIVATE)
      4          ****************************************************************************/
      5          #include "defs/esnl_pub.h"
      6          #include "FEAT_STM32W/STM32W_Radio.h"
      7          

   \                                 In section .bss, align 4
      8          sint8_t XDATA packet[115]; // packet to be filled before transmission
   \                     packet:
   \   00000000                      DS8 116
      9          
     10          #ifdef ENABLE_HIO_XBEE
     11          
     12          #include "hio_xbee_prv.h"
     13          #include "hio_xbee_pub.h"
     14          
     15          #include "FEAT_Xbee_API/API_frames.h"
     16          #include "FEAT_Xbee_API/AT_scripts.h"
     17          //#include "packet.h"
     18          #include "FEAT_Networking/Phy_layer.h"
     19          //#include "HW_LIB/uart_0.h"
     20          #include "sys_func.h"
     21          
     22          #include "common.h"
     23          
     24          #include "FEAT_Scheduler/sch_basic_pub.h"
     25          
     26          
     27          #ifdef FEAT_ENABLE_CH_SWITCHING
     28          	#include "FEAT_Networking/ChannelSwitching.h"
     29          #endif
     30          
     31          //#include "CongestionControl.h"
     32          
     33          //#include "FEAT_Routing/routing_OEDSR.h"
     34          #include "FEAT_Routing/routing.h"
     35          #ifdef FEAT_ENABLE_AODV
     36          	#include "FEAT_Routing/routing_AODV.h"
     37          #endif //FEAT_ENABLE_AODV
     38          
     39          #include "Application.h"
     40          
     41          /****************************************************************************
     42          **	Variables definition (PRIVATE)
     43          ****************************************************************************/
     44          
     45          #ifndef _ARM_
     46          
     47            #ifdef __KEIL__
     48          	///////////////////////////////////////////////
     49          	//Reset Resources
     50          	sbit XBEE_RESET_NOT = P2 ^ 5;
     51          	sbit XBEE_DTR_NOT = P2 ^ 6;
     52          	///////////////////////////////////////////////
     53          	sbit YLED = P2 ^ 4;
     54            #endif
     55          
     56            #ifdef __SDCC__
     57          	///////////////////////////////////////////////
     58          	//Reset Resources
     59          	#define XBEE_RESET_NOT P2_5
     60          	#define XBEE_DTR_NOT P2_6
     61          	///////////////////////////////////////////////
     62          	//LED Resources
     63          // due to F1	#define YLED P2_4
     64          	#define YLED P2_6
     65            #endif
     66          #endif // no _ARM_
     67          

   \                                 In section .bss, align 4
     68          int8_t XDATA rx_packet[115];
     69          int8_t XDATA rx_state = RX_IDLE;
   \                     rx_state:
   \   00000000                      DS8 1
   \   00000001                      DS8 3
   \                     rx_packet:
   \   00000004                      DS8 116
     70          
     71          int16_t XDATA rx_expected_length; // expected length of the packet being received
   \                     rx_expected_length:
   \   00000078                      DS8 2
     72          

   \                                 In section .bss, align 1
     73          uint8_t XDATA tmp = 0;
   \                     tmp:
   \   00000000                      DS8 1
     74          

   \                                 In section .bss, align 4
     75          uint8_t request_debug_packet_; // request for sending DEBUG packet
   \                     request_debug_packet_:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
     76          uint16_t  XDATA request_debug_packet_dst_;
   \                     request_debug_packet_dst_:
   \   00000002                      DS8 2
     77          
     78          rtc_tick_t XDATA hio_state_timeout;
     79          
     80          uint32_t count_received_ = 0;
   \                     count_received_:
   \   00000004                      DS8 4
     81          uint32_t count_received_xbee_ack_ = 0;
   \                     count_received_xbee_ack_:
   \   00000008                      DS8 4

   \                                 In section .bss, align 4
   \                     hio_state_timeout:
   \   00000000                      DS8 4
     82          
     83          /****************************************************************************
     84          **	Variables definition (PUBLIC)
     85          ****************************************************************************/
     86          
     87          
     88          /****************************************************************************
     89          **	Functions implementation (PRIVATE)
     90          ****************************************************************************/
     91          
     92          
     93          /****************************************************************************
     94          **	Functions implementation (PUBLIC)
     95          ****************************************************************************/
     96          
     97          
     98          
     99          /**
    100          *  hio_xbee_init() - Initi the XBee interface
    101          */

   \                                 In section .text, align 2, keep-with-next
    102          void hio_xbee_init()
    103          {
   \                     hio_xbee_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    104          	uint8_t i;
    105          	rx_state = RX_IDLE;
   \   00000002   0x....             LDR.N    R0,??DataTable4
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x7001             STRB     R1,[R0, #+0]
    106          	rx_expected_length = 0;
   \   00000008   0xF8A0 0x1078      STRH     R1,[R0, #+120]
    107          	for ( i = 0;i < 100;i++ )
    108          	{
    109          		rx_packet[i] = 0x45;
   \   0000000C   0x2245             MOVS     R2,#+69
   \   0000000E   0x2164             MOVS     R1,#+100
   \   00000010   0x1D00             ADDS     R0,R0,#+4
   \   00000012   0x.... 0x....      BL       __aeabi_memset4
    110          	}
    111          	for ( i = 0;i < 100;i++ )
    112          	{
    113          		packet[i] = 0x44;
   \   00000016   0x2244             MOVS     R2,#+68
   \   00000018   0x2164             MOVS     R1,#+100
   \   0000001A   0x....             LDR.N    R0,??DataTable4_1
   \   0000001C   0x.... 0x....      BL       __aeabi_memset4
    114          	}
    115          
    116          	sch_add_loop((sch_loop_func_t)hio_xbee_loop);
   \   00000020   0x.... 0x....      ADR.W    R0,hio_xbee_loop
   \   00000024   0x.... 0x....      BL       sch_add_loop
    117          
    118          	// send initial PING to everybody
    119          	request_debug_packet_ = 1;
   \   00000028   0x....             LDR.N    R0,??DataTable4_2
   \   0000002A   0x2101             MOVS     R1,#+1
   \   0000002C   0x7001             STRB     R1,[R0, #+0]
    120          	request_debug_packet_dst_ = MAC_BROADCAST; //pkt->dst_id;
   \   0000002E   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000032   0x8041             STRH     R1,[R0, #+2]
    121          
    122          }
   \   00000034   0xBD01             POP      {R0,PC}          ;; return
    123          
    124          
    125          /**
    126          *  hio_xbee_loop() - Main loop of the XBee High-level IO interface
    127          */

   \                                 In section .text, align 4, keep-with-next
    128          void hio_xbee_loop()
    129          {
   \                     hio_xbee_loop: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    130          	if (TRUE == packetReceived)
   \   00000002   0x....             LDR.N    R5,??DataTable4_3
   \   00000004   0x....             LDR.N    R4,??DataTable4_2
   \   00000006   0x7828             LDRB     R0,[R5, #+0]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD11B             BNE.N    ??hio_xbee_loop_0
    131          	{
    132          		// Update Routing Table ??
    133          		if (rxPacket[11] != 0x03)
   \   0000000C   0x....             LDR.N    R6,??DataTable4_4
   \   0000000E   0x7AF0             LDRB     R0,[R6, #+11]
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD012             BEQ.N    ??hio_xbee_loop_1
    134          		{
    135          #ifdef MMCR_ENABLE_TRUE_NEIGHBORS
    136          			uint16_t src = rxPacket[9]; src = src << 8; src += rxPacket[8];
   \   00000014   0x7A70             LDRB     R0,[R6, #+9]
   \   00000016   0x7A31             LDRB     R1,[R6, #+8]
   \   00000018   0xEB01 0x2100      ADD      R1,R1,R0, LSL #+8
    137          			rtr_add_neighbor(src, src, 1);
   \   0000001C   0xB289             UXTH     R1,R1
   \   0000001E   0x2201             MOVS     R2,#+1
   \   00000020   0x4608             MOV      R0,R1
   \   00000022   0x.... 0x....      BL       rtr_add_neighbor
    138          #endif // MMCR_ENABLE_TRUE_NEIGHBORS
    139          			count_received_ ++;
   \   00000026   0x6860             LDR      R0,[R4, #+4]
   \   00000028   0x1C40             ADDS     R0,R0,#+1
   \   0000002A   0x6060             STR      R0,[R4, #+4]
    140          			// Copy packet??
    141          			hio_recv_packet  ( (sint8_t*)& (rxPacket[12]), rxPacketRSSI ); // data ref and RSSI
   \   0000002C   0x....             LDR.N    R0,??DataTable4_5
   \   0000002E   0x7801             LDRB     R1,[R0, #+0]
   \   00000030   0xF106 0x000C      ADD      R0,R6,#+12
   \   00000034   0x.... 0x....      BL       hio_recv_packet
   \   00000038   0xE002             B.N      ??hio_xbee_loop_2
    142          		}
    143          		else
    144          		{
    145          			// Received XBee ACK????
    146          			count_received_xbee_ack_++;
   \                     ??hio_xbee_loop_1: (+1)
   \   0000003A   0x68A0             LDR      R0,[R4, #+8]
   \   0000003C   0x1C40             ADDS     R0,R0,#+1
   \   0000003E   0x60A0             STR      R0,[R4, #+8]
    147          		}
    148          		// Acknowledge release of RX buffer
    149          		packetReceived = FALSE;
   \                     ??hio_xbee_loop_2: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x7028             STRB     R0,[R5, #+0]
    150          	}
    151          
    152          ///////////////////////////////////////////////
    153          	// Send "DEBUG" / "ping-pong" packet
    154          	if ( 1 == request_debug_packet_ )
   \                     ??hio_xbee_loop_0: (+1)
   \   00000044   0x7820             LDRB     R0,[R4, #+0]
   \   00000046   0x2801             CMP      R0,#+1
   \   00000048   0xD104             BNE.N    ??hio_xbee_loop_3
    155          	{
    156          		send_PONG ( request_debug_packet_dst_ );
   \   0000004A   0x8860             LDRH     R0,[R4, #+2]
   \   0000004C   0x.... 0x....      BL       send_PONG
    157          		request_debug_packet_ = 0;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x7020             STRB     R0,[R4, #+0]
    158          	}
    159          ///////////////////////////////////////////////
    160          
    161          }
   \                     ??hio_xbee_loop_3: (+1)
   \   00000054   0xBD70             POP      {R4-R6,PC}       ;; return
    162          
    163          
    164          
    165          ///////////////////////////////////////////////
    166          //Function for Reception and Sorting of Packet Types
    167          ///////////////////////////////////////////////

   \                                 In section .text, align 2, keep-with-next
    168          void hio_recv_packet  ( sint8_t XDATA *p, sint8_t rssi )
    169          {
   \                     hio_recv_packet: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460E             MOV      R6,R1
    170          	pkt_t XDATA *pkt = ( pkt_t XDATA * ) p;
    171          //	YLED = 0;
    172          ///////////////////////////////////////////////
    173          	// TODO: for flag in ROUTING RANGE -> call routing handling function
    174          	switch ( pkt->flags )
   \   00000006   0x7860             LDRB     R0,[R4, #+1]
   \   00000008   0x....             LDR.N    R1,??DataTable4_6
   \   0000000A   0x....             LDR.N    R5,??DataTable4_2
   \   0000000C   0x780A             LDRB     R2,[R1, #+0]
   \   0000000E   0x2801             CMP      R0,#+1
   \   00000010   0xD06A             BEQ.N    ??hio_recv_packet_0
   \   00000012   0x2807             CMP      R0,#+7
   \   00000014   0xD04F             BEQ.N    ??hio_recv_packet_1
   \   00000016   0x2808             CMP      R0,#+8
   \   00000018   0xD029             BEQ.N    ??hio_recv_packet_2
   \   0000001A   0x2809             CMP      R0,#+9
   \   0000001C   0xD01F             BEQ.N    ??hio_recv_packet_3
   \   0000001E   0x280A             CMP      R0,#+10
   \   00000020   0xD03B             BEQ.N    ??hio_recv_packet_4
   \   00000022   0x280D             CMP      R0,#+13
   \   00000024   0xD010             BEQ.N    ??hio_recv_packet_5
   \   00000026   0x2811             CMP      R0,#+17
   \   00000028   0xD026             BEQ.N    ??hio_recv_packet_6
   \   0000002A   0x2813             CMP      R0,#+19
   \   0000002C   0xD03E             BEQ.N    ??hio_recv_packet_7
   \   0000002E   0x2815             CMP      R0,#+21
   \   00000030   0xD028             BEQ.N    ??hio_recv_packet_8
   \   00000032   0x2816             CMP      R0,#+22
   \   00000034   0xD02B             BEQ.N    ??hio_recv_packet_9
   \   00000036   0x2867             CMP      R0,#+103
   \   00000038   0xD06B             BEQ.N    ??hio_recv_packet_10
   \   0000003A   0x2868             CMP      R0,#+104
   \   0000003C   0xD064             BEQ.N    ??hio_recv_packet_11
   \   0000003E   0x2871             CMP      R0,#+113
   \   00000040   0xD05E             BEQ.N    ??hio_recv_packet_12
   \   00000042   0x2878             CMP      R0,#+120
   \   00000044   0xD058             BEQ.N    ??hio_recv_packet_13
   \   00000046   0xE069             B.N      ??hio_recv_packet_14
    175          	{
    176          
    177          			///////////////////////////////////////////////
    178          			//Process STARTData Packet
    179          		case FLAG_STARTD:
    180          			routing_data_request ( p );
   \                     ??hio_recv_packet_5: (+1)
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       routing_data_request
    181          			app_recvStartData ( ( pkt_t* ) p );
   \   0000004E   0x4620             MOV      R0,R4
   \   00000050   0x.... 0x....      BL       app_recvStartData
    182          			// PING packet handling -> respond with PONG
    183          			request_debug_packet_ = 1;
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0x7028             STRB     R0,[R5, #+0]
    184          			request_debug_packet_dst_ = BS_ADDR;
   \   00000058   0x20FE             MOVS     R0,#+254
   \   0000005A   0x8068             STRH     R0,[R5, #+2]
    185          			break;
   \   0000005C   0xBD70             POP      {R4-R6,PC}
    186          			///////////////////////////////////////////////
    187          		case FLAG_STOP_DATA:
    188          			// TODO: Handling of STOP DATA GENERATION/SENDING
    189          			recvStopData ( p );
   \                     ??hio_recv_packet_3: (+1)
   \   0000005E   0x4620             MOV      R0,R4
   \   00000060   0x.... 0x....      BL       recvStopData
    190          			app_recvStopData ( ( pkt_t * ) p );
   \   00000064   0x4620             MOV      R0,R4
   \   00000066   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000006A   0x.... 0x....      B.W      app_recvStopData
    191          			//	app_suspendADC();
    192          			break;
    193          			///////////////////////////////////////////////
    194          		case FLAG_CONFIG_NODE:
    195          			// TODO: Handling of CONFIGURATION message:
    196          			//		  - read and apply config (e.g. set routing protocol to use next time)
    197          			//		  - forward the config info (multihop case)
    198          //			recvConfigSensor(p);
    199          			NodeConfigure ( p );
   \                     ??hio_recv_packet_2: (+1)
   \   0000006E   0x4620             MOV      R0,R4
   \   00000070   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000074   0x.... 0x....      B.W      NodeConfigure
    200          			break;
    201          			///////////////////////////////////////////////
    202          			///////////////////////////////////////////////
    203          		case FLAG_NEW_CONFIG_NODE:
    204          			// TODO: Handling of NEW CONFIGURATION message:
    205          			//		  - read and apply config (e.g. set routing protocol to use next time)
    206          			//		  - forward the config info (multihop case)
    207          			app_recvConfigSensor ( ( pkt_t * ) p , rssi );
   \                     ??hio_recv_packet_6: (+1)
   \   00000078   0x4631             MOV      R1,R6
   \   0000007A   0x4620             MOV      R0,R4
   \   0000007C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000080   0x.... 0x....      B.W      app_recvConfigSensor
    208          			break;
    209          			///////////////////////////////////////////////
    210          		case FLAG_START_SEARCH_CHANNEL:
    211          			// TODO: Handling of NEW CONFIGURATION message:
    212          			//		  - read and apply config (e.g. set routing protocol to use next time)
    213          			//		  - forward the config info (multihop case)
    214          			app_start_search_channel ( ( pkt_t * ) p );
   \                     ??hio_recv_packet_8: (+1)
   \   00000084   0x4620             MOV      R0,R4
   \   00000086   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000008A   0x.... 0x....      B.W      app_start_search_channel
    215          			break;
    216          			///////////////////////////////////////////////
    217          #ifdef FEAT_ENABLE_CH_SWITCHING
    218          		case FLAG_CHANNEL_SWITCHING_V2:
    219          			// TODO: Handling of NEW CONFIGURATION message:
    220          			//		  -
    221          			//		  -
    222          			{
    223          				pkt_v2_t * p2 = ( pkt_v2_t * ) p;
    224          				pkt_mod_header_t * mh = (pkt_mod_header_t *)(&( p2->data_modules ));
    225          				cs_recv_switching_request ( &(mh->content) );
                 				                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \                     ??hio_recv_packet_9: (+1)
   \   0000008E   0xF104 0x000B      ADD      R0,R4,#+11
   \   00000092   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000096   0x.... 0x....      B.W      cs_recv_switching_request
    226          			}
    227          			break;
    228          #endif // FEAT_ENABLE_CH_SWITCHING
    229          			///////////////////////////////////////////////
    230          		case FLAG_BEAM:
    231          			if ( SEARCH_OFF != network_search_mode_ )
    232          			{
    233          				app_recvBEAM ( ( char * ) p );
    234          				routing_send_counters();
    235          			}
    236          			else
    237          			{
    238          				app_recvBEAM ( ( char * ) p );
   \                     ??hio_recv_packet_4: (+1)
   \   0000009A   0x4620             MOV      R0,R4
   \   0000009C   0x.... 0x....      BL       app_recvBEAM
    239          				routing_send_counters();
   \   000000A0   0x.... 0x....      BL       routing_send_counters
    240          			}
    241          			rtr_start_routing(BS_ADDR);
   \   000000A4   0x20FE             MOVS     R0,#+254
   \   000000A6   0x.... 0x....      BL       rtr_start_routing
    242          			routing_receive_packet( p, rssi);
   \   000000AA   0xE043             B.N      ??hio_recv_packet_15
    243          			break;
    244          			///////////////////////////////////////////////
    245          		case FLAG_BEACON:
    246          			if ( SEARCH_OFF != network_search_mode_ )
   \                     ??hio_recv_packet_7: (+1)
   \   000000AC   0x4620             MOV      R0,R4
    247          			{
    248          				app_received_beacon ( ( pkt_t * ) p );
    249          			}
    250          			else
    251          			{
    252          				app_received_beacon ( ( pkt_t * ) p );
   \   000000AE   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   000000B2   0x.... 0x....      B.W      app_received_beacon
    253          			}
    254          			break;
    255          			///////////////////////////////////////////////
    256          		case FLAG_RESET_SW:
    257          			if ( ( 0xFFFF == ENDIAN16(pkt->mac_dst) ) && ( 0x5253 == ENDIAN16(pkt->mac_src) ) && ( 0x54 == pkt->length ) )
   \                     ??hio_recv_packet_1: (+1)
   \   000000B6   0x8860             LDRH     R0,[R4, #+2]
   \   000000B8   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_0: (+1)
   \   000000BC   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000C0   0x4288             CMP      R0,R1
   \   000000C2   0xD13D             BNE.N    ??hio_recv_packet_16
   \   000000C4   0x88A0             LDRH     R0,[R4, #+4]
   \   000000C6   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_1: (+1)
   \   000000CA   0xF245 0x2153      MOVW     R1,#+21075
   \   000000CE   0x4288             CMP      R0,R1
   \   000000D0   0xBF04             ITT      EQ 
   \   000000D2   0x79A0             LDRBEQ   R0,[R4, #+6]
   \   000000D4   0x2854             CMPEQ    R0,#+84
   \   000000D6   0xD133             BNE.N    ??hio_recv_packet_16
    258          			{
    259          				sys_reset();
   \   000000D8   0x.... 0x....      BL       sys_reset
    260          
    261          // IS IT NEEDED OR USED AT ALL?? since after reset the node reinitializes everything
    262          				rtc_ticker = 0;
   \   000000DC   0x....             LDR.N    R1,??DataTable4_7
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x6008             STR      R0,[R1, #+0]
    263          				sequence_no_ = 0;
   \   000000E2   0x....             LDR.N    R1,??DataTable4_8
   \   000000E4   0x7008             STRB     R0,[R1, #+0]
    264          //				RLED = 1;
    265          //				GLED = 1;
    266          				SET_LED(YLED);// = 1;
   \   000000E6   0xE002             B.N      ??hio_recv_packet_17
    267          				//app_suspendADC();
    268          			}
    269          			break;
    270          			///////////////////////////////////////////////
    271          		case FLAG_PING:
    272          			// PING packet handling -> respond with PONG
    273          			request_debug_packet_ = 1;
   \                     ??hio_recv_packet_0: (+1)
   \   000000E8   0x7028             STRB     R0,[R5, #+0]
    274          			request_debug_packet_dst_ = BS_ADDR; //pkt->dst_id;
   \   000000EA   0x20FE             MOVS     R0,#+254
   \   000000EC   0x8068             STRH     R0,[R5, #+2]
    275          			SET_LED(YLED);// = 1;
   \                     ??hio_recv_packet_17: (+1)
   \   000000EE   0x2001             MOVS     R0,#+1
   \   000000F0   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   000000F4   0x.... 0x....      B.W      STM_EVAL_LEDOn
    276          			break;
    277          			///////////////////////////////////////////////
    278          		case FLAG_SEND_COUNTERS:
    279          			//Packet to Start the Relay of the Counter Information
    280          			routing_send_counters();
   \                     ??hio_recv_packet_13: (+1)
   \   000000F8   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   000000FC   0x.... 0x....      B.W      routing_send_counters
    281          			break;
    282          			///////////////////////////////////////////////
    283          		case FLAG_STOP_COUNTERS:
    284          			//Disable Packet Counters
    285          			AODVcounter_update = 0;
   \                     ??hio_recv_packet_12: (+1)
   \   00000100   0x....             LDR.N    R1,??DataTable4_9
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x7008             STRB     R0,[R1, #+0]
    286          			break;
   \   00000106   0xBD70             POP      {R4-R6,PC}
    287          			///////////////////////////////////////////////
    288          		case FLAG_DISABLE_NODE:
    289          			disable_node ( 0x99 );
   \                     ??hio_recv_packet_11: (+1)
   \   00000108   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000010C   0x2099             MOVS     R0,#+153
   \   0000010E   0x.... 0x....      B.W      disable_node
    290          			break;
    291          			///////////////////////////////////////////////
    292          		case FLAG_ENABLE_NODE:
    293          			enable_node ( p );
   \                     ??hio_recv_packet_10: (+1)
   \   00000112   0x4620             MOV      R0,R4
   \   00000114   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000118   0x.... 0x....      B.W      enable_node
    294          			break;
    295          
    296          #ifdef FEAT_ENABLE_CC
    297          		case FLAG_PCC_V2:
    298          			if (PHY_BACKOFF_NO_PCC != my_backoff_)
    299          			{
    300          				cc_recv_PCC_upstream ( p );
    301          			}
    302          			break;
    303          #endif
    304          			///////////////////////////////////////////////
    305          		default:
    306          			if ( ( SEARCH_OEDSR_HELLO == network_search_mode_ ) && ( FLAG_ACK == pkt->flags ) )
   \                     ??hio_recv_packet_14: (+1)
   \   0000011C   0x2A03             CMP      R2,#+3
   \   0000011E   0xBF08             IT       EQ 
   \   00000120   0x280C             CMPEQ    R0,#+12
   \   00000122   0xD104             BNE.N    ??hio_recv_packet_18
    307          			{
    308          				// received ACK in the
    309          				app_send_join ( BS_ADDR, my_rf_channel_, network_search_mode_ );
   \   00000124   0x....             LDR.N    R0,??DataTable4_10
   \   00000126   0x7801             LDRB     R1,[R0, #+0]
   \   00000128   0x20FE             MOVS     R0,#+254
   \   0000012A   0x.... 0x....      BL       app_send_join
    310          			}
    311          			if ( 0 == energy_depleted_control_ )
   \                     ??hio_recv_packet_18: (+1)
   \   0000012E   0x....             LDR.N    R0,??DataTable4_11
   \   00000130   0x7800             LDRB     R0,[R0, #+0]
   \   00000132   0xB928             CBNZ.N   R0,??hio_recv_packet_16
    312          			{
    313          				routing_receive_packet ( p, rssi );
   \                     ??hio_recv_packet_15: (+1)
   \   00000134   0x4631             MOV      R1,R6
   \   00000136   0x4620             MOV      R0,R4
   \   00000138   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000013C   0x.... 0x....      B.W      routing_receive_packet
    314          			}
    315          			break;
    316          	}
    317          }
   \                     ??hio_recv_packet_16: (+1)
   \   00000140   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x0A01             LSRS     R1,R0,#+8
   \   00000002   0x0200             LSLS     R0,R0,#+8
   \   00000004   0xF400 0x407F      AND      R0,R0,#0xFF00
   \   00000008   0x4308             ORRS     R0,R0,R1
   \   0000000A   0x4770             BX       LR
    318          
    319          
    320          

   \                                 In section .text, align 2, keep-with-next
    321          void send_PONG ( uint16_t mac_dst )
    322          {
   \                     send_PONG: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4605             MOV      R5,R0
    323          	pkt_v2_t *p = (pkt_v2_t *)packet;
    324          	pkt_mod_header_t *pm = (pkt_mod_header_t *)&(p->data_modules);
    325          	pkt_mod_adfs_t *p_adfs = ( pkt_mod_adfs_t* ) &(pm->content );
    326          	p->start = START_BYTE;
   \   00000006   0x....             LDR.N    R4,??DataTable4_1
   \   00000008   0x2042             MOVS     R0,#+66
   \   0000000A   0x7020             STRB     R0,[R4, #+0]
    327          	p->flag = FLAG_DATA_TEST_V2;
    328          	p->mac_dst = ENDIAN16((uint16_t)mac_dst);
    329          	p->mac_src = ENDIAN16(MY_ADDR);
    330          	p->length = NEW_PONG_LEN - PKT_HEADER_LENGTH; // of the packet'd data
    331          	p->dst_id = mac_dst; // part of DATA field (dest_id) - actual length depends on "length"
   \   0000000C   0x71E5             STRB     R5,[R4, #+7]
   \   0000000E   0x2075             MOVS     R0,#+117
   \   00000010   0x7060             STRB     R0,[R4, #+1]
   \   00000012   0x0228             LSLS     R0,R5,#+8
   \   00000014   0xEA40 0x2015      ORR      R0,R0,R5, LSR #+8
   \   00000018   0x8060             STRH     R0,[R4, #+2]
   \   0000001A   0x....             LDR.N    R0,??DataTable4_12
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
    332          	p->src_id = MY_ADDR; // part of DATA field
   \   0000001E   0x7220             STRB     R0,[R4, #+8]
   \   00000020   0x0201             LSLS     R1,R0,#+8
    333          
    334          	pm->module_type = PKT_MODULE_TYPE_PONG; // The same as ADFS
   \   00000022   0x2011             MOVS     R0,#+17
   \   00000024   0x7260             STRB     R0,[R4, #+9]
   \   00000026   0x80A1             STRH     R1,[R4, #+4]
    335          	pm->module_length = PKT_MODULE_LEN_ADFS;
   \   00000028   0x2005             MOVS     R0,#+5
   \   0000002A   0x72A0             STRB     R0,[R4, #+10]
   \   0000002C   0x210A             MOVS     R1,#+10
    336          
    337          	p_adfs->weight = 0xFF;
   \   0000002E   0x20FF             MOVS     R0,#+255
   \   00000030   0x71A1             STRB     R1,[R4, #+6]
   \   00000032   0x72E0             STRB     R0,[R4, #+11]
    338          	p_adfs ->ticker = ENDIAN32(rtc_get_rticks());
   \   00000034   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   00000038   0x4680             MOV      R8,R0
   \   0000003A   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   0000003E   0x4606             MOV      R6,R0
   \   00000040   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   00000044   0x4607             MOV      R7,R0
   \   00000046   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   0000004A   0x....             LDR.N    R1,??DataTable4_7
   \   0000004C   0x6809             LDR      R1,[R1, #+0]
   \   0000004E   0x1A73             SUBS     R3,R6,R1
   \   00000050   0x0A1B             LSRS     R3,R3,#+8
   \   00000052   0xEBA8 0x0201      SUB      R2,R8,R1
   \   00000056   0xF403 0x437F      AND      R3,R3,#0xFF00
   \   0000005A   0xEA43 0x6212      ORR      R2,R3,R2, LSR #+24
   \   0000005E   0x1A7B             SUBS     R3,R7,R1
   \   00000060   0x021B             LSLS     R3,R3,#+8
   \   00000062   0xF403 0x037F      AND      R3,R3,#0xFF0000
   \   00000066   0x431A             ORRS     R2,R3,R2
   \   00000068   0x1A40             SUBS     R0,R0,R1
   \   0000006A   0xEA42 0x6000      ORR      R0,R2,R0, LSL #+24
   \   0000006E   0x60E0             STR      R0,[R4, #+12]
    339          
    340          	packet[NEW_PONG_LEN-1] = PKT_MODULE_TYPE_END;
    341          #ifndef NO_UART_OUT
    342          	printf("Sending PONG packet to %d (0x%x)\r\n", mac_dst, mac_dst);
   \   00000070   0x462A             MOV      R2,R5
   \   00000072   0x2041             MOVS     R0,#+65
   \   00000074   0x7420             STRB     R0,[R4, #+16]
   \   00000076   0x4629             MOV      R1,R5
   \   00000078   0x.... 0x....      ADR.W    R0,?_0
   \   0000007C   0x.... 0x....      BL       printf
    343          #endif
    344          #ifndef _ARM_
    345          //	TX_PACKET( packet, NEW_PONG_LEN);
    346          //	api_send_packet16( p, l, mac_dest);
    347          	api_send_packet16( packet, NEW_PONG_LEN, MAC_BROADCAST);
    348          #else // not _ARM_
    349          	sendPriorityPacket( NEW_PONG_LEN, (sint8_t*)packet, MAC_BROADCAST);
   \   00000080   0x4621             MOV      R1,R4
   \   00000082   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000086   0xF64F 0x72FF      MOVW     R2,#+65535
   \   0000008A   0x2011             MOVS     R0,#+17
   \   0000008C   0x.... 0x....      B.W      sendPriorityPacket
    350          #endif // else not _ARM_
    351          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     rx_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     packet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     request_debug_packet_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     packetReceived

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     rxPacket

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     rxPacketRSSI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     network_search_mode_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     rtc_ticker

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     sequence_no_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     AODVcounter_update

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     my_rf_channel_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     energy_depleted_control_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     my_addr8_

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x53 0x65          DC8 "Sending PONG packet to %d (0x%x)\015\012"
   \              0x6E 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x50 0x4F    
   \              0x4E 0x47    
   \              0x20 0x70    
   \              0x61 0x63    
   \              0x6B 0x65    
   \              0x74 0x20    
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x28 0x30    
   \              0x78 0x25    
   \              0x78 0x29    
   \              0x0D 0x0A    
   \              0x00         
   \   00000023   0x00               DC8 0
    352          
    353          //////////////////////////////////////////////////////////////////////////////////////////////
    354          //////////////////////////////////////////////////////////////////////////////////////////////
    355          //////////////////////////////////////////////////////////////////////////////////////////////
    356          
    357          #endif // ENABLE_HIO_XBEE

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   hio_recv_packet
         0   -> NodeConfigure
         0   -> STM_EVAL_LEDOn
         0   -> app_received_beacon
        16   -> app_recvBEAM
         0   -> app_recvConfigSensor
        16   -> app_recvStartData
         0   -> app_recvStopData
        16   -> app_send_join
         0   -> app_start_search_channel
         0   -> cs_recv_switching_request
         0   -> disable_node
         0   -> enable_node
        16   -> recvStopData
        16   -> routing_data_request
         0   -> routing_receive_packet
         0   -> routing_send_counters
        16   -> routing_send_counters
        16   -> rtr_start_routing
        16   -> sys_reset
       8   hio_xbee_init
         8   -> __aeabi_memset4
         8   -> sch_add_loop
      16   hio_xbee_loop
        16   -> hio_recv_packet
        16   -> rtr_add_neighbor
        16   -> send_PONG
      24   send_PONG
        24   -> halCommonGetInt32uMillisecondTick
        24   -> printf
         0   -> sendPriorityPacket


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      12  ?Subroutine0
      36  ?_0
     322  hio_recv_packet
       4  hio_state_timeout
      54  hio_xbee_init
      86  hio_xbee_loop
     116  packet
      12  request_debug_packet_
          request_debug_packet_dst_
          count_received_
          count_received_xbee_ack_
     122  rx_state
          rx_packet
          rx_expected_length
     144  send_PONG
       1  tmp

 
 255 bytes in section .bss
 706 bytes in section .text
 
 706 bytes of CODE memory
 255 bytes of DATA memory

Errors: none
Warnings: 1
