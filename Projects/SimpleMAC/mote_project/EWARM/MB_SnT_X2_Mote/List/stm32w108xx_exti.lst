###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        21/Feb/2015  16:29:47
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Libraries\STM32W108xx_StdPeriph_Driver\src\stm32w108xx_exti.c
#    Command line =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Libraries\STM32W108xx_StdPeriph_Driver\src\stm32w108xx_exti.c
#        -D USE_STDPERIPH_DRIVER -D USE_MB_SNT_X2 -D STM32W108CB -D
#        "PLATFORM_HEADER=\"Utilities\STM32W108xx_HAL_Driver/micro/cortexm3/compiler/iar.h\""
#        -D CORTEXM3 -D CORTEXM3_STM32W108 -D CORTEXM3_STM32W108xB -D
#        DISABLE_WATCHDOG -D "__SOURCEFILE__=\"stm32w108xx_exti.c\"" -lC
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\List\
#        --diag_suppress Pa050 -o
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Libraries\STM32W108xx_StdPeriph_Driver\src\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\cortexm3\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\cortexm3\stm32w108\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\generic\compiler\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32W108xx_HAL_Driver\micro\cortexm3\bootloader\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\Shared\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\CMSIS\Include\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\STM32W108xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\CMSIS\Device\ST\STM32W108xx\Include\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Libraries\SimpleMAC\Include\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32_EVAL\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\..\..\Utilities\STM32_EVAL\MB851\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\
#        -I
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\..\..\arm_mote\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\List\stm32w108xx_exti.lst
#    Object file  =  
#        C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Projects\SimpleMAC\mote_project\EWARM\MB_SnT_X2_Mote\Obj\stm32w108xx_exti.o
#
###############################################################################

C:\Users\Jon\Documents\MO_S_and_T\CpE5170_RT_Systems\Labs\cpe-5170-mote-code\Libraries\STM32W108xx_StdPeriph_Driver\src\stm32w108xx_exti.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32w108xx_exti.c
      4            * @author  MCD Application Team
      5            * @version V1.0.1
      6            * @date    30-November-2012
      7            * @brief   This file provides firmware functions to manage the following 
      8            *          functionalities of the EXTI peripheral:           
      9            *           + Initialization and Configuration
     10            *           + Interrupts and flags management
     11            *             
     12            *  @verbatim  
     13            *  
     14            ============================================================================== 
     15                                    ##### EXTI features #####
     16            ==============================================================================              
     17              [..] External interrupt/event lines are mapped as following:
     18                   (#) All available GPIO pins are connected to the 4 external 
     19                       interrupt/event lines from EXTIA to EXTID.                             
     20                   (#) EXTIA and EXTIB have fixed pins assignement (PB0 and PB6).
     21                   (#) EXTIC and EXTID can use any GPIO pin.
     22                                    
     23                                    ##### How to use this driver ##### 
     24            ============================================================================== 
     25              [..] In order to use an I/O pin as an external interrupt source, follow
     26                   steps below:
     27                  (#) Configure the I/O in input mode using GPIO_Init()
     28                  (#) Select the mode(interrupt, event) and configure the trigger selection 
     29                      using EXTI_Init(). 
     30                  (#) Configure NVIC IRQ channel mapped to the EXTI line using NVIC_Init().
     31                            
     32              @endverbatim
     33            *    
     34            ******************************************************************************
     35            * @attention
     36            *
     37            * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     38            *
     39            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     40            * You may not use this file except in compliance with the License.
     41            * You may obtain a copy of the License at:
     42            *
     43            *        http://www.st.com/software_license_agreement_liberty_v2
     44            *
     45            * Unless required by applicable law or agreed to in writing, software 
     46            * distributed under the License is distributed on an "AS IS" BASIS, 
     47            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     48            * See the License for the specific language governing permissions and
     49            * limitations under the License.
     50            *
     51            ******************************************************************************  
     52            */ 
     53          
     54          /* Includes ------------------------------------------------------------------*/
     55          #include "stm32w108xx_exti.h"
     56          
     57          /** @addtogroup STM32W108xx_StdPeriph_Driver
     58            * @{
     59            */
     60          
     61          /** @defgroup EXTI 
     62            * @brief EXTI driver modules
     63            * @{
     64            */
     65          
     66          /* Private typedef -----------------------------------------------------------*/
     67          /* Private define ------------------------------------------------------------*/
     68          /* Private macro -------------------------------------------------------------*/
     69          /* Private variables ---------------------------------------------------------*/
     70          /* Private function prototypes -----------------------------------------------*/
     71          /* Private functions ---------------------------------------------------------*/
     72          
     73          
     74          /** @defgroup EXTI_Private_Functions
     75            * @{
     76            */
     77          
     78          /** @defgroup EXTI_Group1 EXTI Initialization and Configuration 
     79           *  @brief   Initialization and Configuration of External Interrupt
     80           *
     81          @verbatim   
     82           ===============================================================================
     83                                  EXTI Initialization  and Configuration
     84           ===============================================================================  
     85          
     86          @endverbatim
     87            * @{
     88            */
     89          
     90          /**
     91            * @brief  Deinitializes the EXTI_IRQn line registers to their default reset values.
     92            * @param  None
     93            * @retval None
     94            */

   \                                 In section .text, align 2, keep-with-next
     95          void EXTI_DeInit(void)
     96          {
   \                     EXTI_DeInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     97            uint8_t i;
     98            EXTI->PR = 0x00000000;
   \   00000002   0x....             LDR.N    R1,??DataTable3  ;; 0x4000a814
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x6008             STR      R0,[R1, #+0]
     99            EXTI->CR[0] = 0x0000000F;
   \   00000008   0x210F             MOVS     R1,#+15
   \   0000000A   0x....             LDR.N    R0,??DataTable3_1  ;; 0x4000bc14
   \   0000000C   0x6001             STR      R1,[R0, #+0]
   \   0000000E   0x2200             MOVS     R2,#+0
    100            EXTI->CR[1] = 0x00000010;
   \   00000010   0x2110             MOVS     R1,#+16
   \   00000012   0x6041             STR      R1,[R0, #+4]
    101            for (i=0; i<4; i++)
    102            {
    103              EXTI->TSR[i] = 0x00000000;
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x....             LDR.N    R0,??DataTable3_2  ;; 0x4000a860
   \   00000018   0x460B             MOV      R3,R1
   \   0000001A   0x460C             MOV      R4,R1
   \   0000001C   0xC01E             STM      R0!,{R1-R4}
    104            }  
    105          }
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return
    106          
    107            
    108          /**
    109            * @brief  Initializes the EXTI peripheral according to the specified
    110            *         parameters in the EXTI_InitStruct.
    111            * @param  EXTI_InitStruct: pointer to a EXTI_InitTypeDef structure
    112            *         that contains the configuration information for the EXTI peripheral.
    113            * @retval None
    114            */

   \                                 In section .text, align 2, keep-with-next
    115          void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
    116          {
   \                     EXTI_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    117            /* Check the parameters */
    118            assert_param(IS_EXTI_SOURCE(EXTI_InitStruct->EXTI_Source));
    119            assert_param(IS_EXTI_IRQ(EXTI_InitStruct->EXTI_IRQn));
    120            assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
    121            assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
    122            assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_DigitalFilterCmd));
    123            
    124            if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
   \   00000002   0x7901             LDRB     R1,[R0, #+4]
   \   00000004   0x7983             LDRB     R3,[R0, #+6]
   \   00000006   0x090A             LSRS     R2,R1,#+4
   \   00000008   0x....             LDR.N    R1,??DataTable3_2  ;; 0x4000a860
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xF851 0x3022      LDR      R3,[R1, R2, LSL #+2]
   \   00000010   0xF023 0x03E0      BIC      R3,R3,#0xE0
   \   00000014   0xF841 0x3022      STR      R3,[R1, R2, LSL #+2]
   \   00000018   0xD007             BEQ.N    ??EXTI_Init_0
    125            {
    126              /* Clear Rising Falling edge configuration */
    127              EXTI->TSR[(uint32_t)(EXTI_InitStruct->EXTI_IRQn & 0x000000F0) >>4] &= (uint32_t)(~EXTI_TSR_INTMOD);
    128              
    129              /* Rising Falling edge */
    130              EXTI->TSR[(uint32_t)(EXTI_InitStruct->EXTI_IRQn & 0x000000F0) >>4] |= (uint32_t)(EXTI_InitStruct->EXTI_Trigger);    
   \   0000001A   0x7902             LDRB     R2,[R0, #+4]
   \   0000001C   0x0912             LSRS     R2,R2,#+4
   \   0000001E   0xF851 0x3022      LDR      R3,[R1, R2, LSL #+2]
   \   00000022   0x7944             LDRB     R4,[R0, #+5]
   \   00000024   0x4323             ORRS     R3,R4,R3
   \   00000026   0xF841 0x3022      STR      R3,[R1, R2, LSL #+2]
    131            }
    132            else
    133            {
    134              EXTI->TSR[(uint32_t)(EXTI_InitStruct->EXTI_IRQn & 0x000000F0) >>4] &= (uint32_t)(~EXTI_TSR_INTMOD);
    135            }
    136              
    137            if (EXTI_InitStruct->EXTI_DigitalFilterCmd != DISABLE)
   \                     ??EXTI_Init_0: (+1)
   \   0000002A   0x7902             LDRB     R2,[R0, #+4]
   \   0000002C   0x79C3             LDRB     R3,[R0, #+7]
   \   0000002E   0x0912             LSRS     R2,R2,#+4
   \   00000030   0x2B00             CMP      R3,#+0
   \   00000032   0xF851 0x3022      LDR      R3,[R1, R2, LSL #+2]
   \   00000036   0xBF14             ITE      NE 
   \   00000038   0xF443 0x7380      ORRNE    R3,R3,#0x100
   \   0000003C   0xF423 0x7380      BICEQ    R3,R3,#0x100
    138            {
    139              /* Set the EXTI_TSR_FILTEN bit to Enable degital filtering on the EXTI_IRQn */
    140              EXTI->TSR[(uint32_t)(EXTI_InitStruct->EXTI_IRQn & 0x000000F0) >>4] |= (uint32_t)EXTI_TSR_FILTEN;
    141              
    142            }
    143            else
    144            {
    145              /* Clear the EXTI_TSR_FILTEN bit to disable degital filtering on the EXTI_IRQn */
    146              EXTI->TSR[(uint32_t)(EXTI_InitStruct->EXTI_IRQn & 0x000000F0) >>4] &= (uint32_t)~EXTI_TSR_FILTEN;
   \   00000040   0xF841 0x3022      STR      R3,[R1, R2, LSL #+2]
    147            }
    148            
    149            /* Connect The EXTI_PinSource to the EXTI_IRQn handler */
    150            if ((EXTI_InitStruct->EXTI_IRQn == EXTI_IRQC) || (EXTI_InitStruct->EXTI_IRQn == EXTI_IRQD))
   \   00000044   0x7901             LDRB     R1,[R0, #+4]
   \   00000046   0x2920             CMP      R1,#+32
   \   00000048   0xBF18             IT       NE 
   \   0000004A   0x2931             CMPNE    R1,#+49
   \   0000004C   0xD110             BNE.N    ??EXTI_Init_1
    151            { 
    152              EXTI->CR[(uint32_t)(EXTI_InitStruct->EXTI_IRQn & 0x0000000F)] &= 0x00000000;
   \   0000004E   0x....             LDR.N    R2,??DataTable3_1  ;; 0x4000bc14
   \   00000050   0xF001 0x010F      AND      R1,R1,#0xF
   \   00000054   0xF852 0x3021      LDR      R3,[R2, R1, LSL #+2]
   \   00000058   0x2300             MOVS     R3,#+0
   \   0000005A   0xF842 0x3021      STR      R3,[R2, R1, LSL #+2]
    153              EXTI->CR[(uint32_t)(EXTI_InitStruct->EXTI_IRQn & 0x0000000F)] |= (uint32_t)(EXTI_InitStruct->EXTI_Source);
   \   0000005E   0x7901             LDRB     R1,[R0, #+4]
   \   00000060   0xF001 0x010F      AND      R1,R1,#0xF
   \   00000064   0xF852 0x3021      LDR      R3,[R2, R1, LSL #+2]
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0x4318             ORRS     R0,R0,R3
   \   0000006C   0xF842 0x0021      STR      R0,[R2, R1, LSL #+2]
    154            }
    155            else 
    156            {}
    157          }
   \                     ??EXTI_Init_1: (+1)
   \   00000070   0xBD10             POP      {R4,PC}          ;; return
    158               
    159          /**
    160            * @brief  Fills each EXTI_InitStruct member with its reset value.
    161            * @param  EXTI_InitStruct: pointer to a EXTI_InitTypeDef structure which will
    162            *         be initialized.
    163            * @retval None
    164            */

   \                                 In section .text, align 2, keep-with-next
    165          void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
    166          {
    167            EXTI_InitStruct->EXTI_Source = EXTI_SourcePB0;
   \                     EXTI_StructInit: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
   \   00000002   0x6001             STR      R1,[R0, #+0]
    168            EXTI_InitStruct->EXTI_IRQn = EXTI_IRQA;
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x7101             STRB     R1,[R0, #+4]
    169            EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Disable;
   \   00000008   0x7141             STRB     R1,[R0, #+5]
    170            EXTI_InitStruct->EXTI_LineCmd = DISABLE;
   \   0000000A   0x7181             STRB     R1,[R0, #+6]
    171            EXTI_InitStruct->EXTI_DigitalFilterCmd = DISABLE;
   \   0000000C   0x71C1             STRB     R1,[R0, #+7]
    172          }
   \   0000000E   0x4770             BX       LR               ;; return
    173          
    174          /** @defgroup EXTI_Group2 Interrupts and flags management functions
    175           *  @brief    Interrupts and flags management functions 
    176           *
    177          @verbatim   
    178            ==============================================================================
    179                       ##### Interrupts and flags management functions #####
    180            ==============================================================================
    181          @endverbatim
    182            * @{
    183            */
    184          
    185          /**
    186            * @brief  Checks whether the specified EXTI line is asserted or not.
    187            * @param  EXTI_IRQn: specifies the EXTI line to check.
    188            *   This parameter can be:
    189            *   EXTI_IRQn: External interrupt line n where x(A, B, C or D).
    190            * @retval The new state of EXTI_IRQn (SET or RESET).
    191            */

   \                                 In section .text, align 2, keep-with-next
    192          ITStatus EXTI_GetITStatus(uint32_t EXTI_IRQn)
    193          {
    194            ITStatus bitstatus = RESET;
    195            /* Check the parameters */
    196            assert_param(IS_EXTI_IRQ(EXTI_IRQn));
    197            if ((EXTI->PR & (uint32_t)(1<< ((uint32_t)(EXTI_IRQn & 0x000000F0) >>4))) != (uint32_t)RESET)
   \                     EXTI_GetITStatus: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable3  ;; 0x4000a814
   \   00000002   0x6809             LDR      R1,[R1, #+0]
    198            {
    199              bitstatus = SET;
    200            }
    201            else
    202            {
    203              bitstatus = RESET;
    204            }
    205            return bitstatus;    
   \   00000004   0xF3C0 0x1003      UBFX     R0,R0,#+4,#+4
   \   00000008   0xFA21 0xF200      LSR      R2,R1,R0
   \   0000000C   0xF002 0x0001      AND      R0,R2,#0x1
   \   00000010   0x4770             BX       LR               ;; return
    206          }
    207          
    208          /**
    209            * @brief  Clears the EXTI's line pending bits.
    210            * @param  EXTI_IRQn: specifies the EXTI lines to clear.
    211            *   This parameter can be any combination of EXTI_IRQn where n can be (A, B, C or D).
    212            * @retval None
    213            */

   \                                 In section .text, align 2, keep-with-next
    214          void EXTI_ClearITPendingBit(uint32_t EXTI_IRQn)
    215          {
    216            /* Check the parameters */
    217            assert_param(IS_EXTI_IRQ(EXTI_IRQn));
    218            
    219            EXTI->PR = (uint32_t)(1<< ((EXTI_IRQn & 0x000000F0) >>4));   
   \                     EXTI_ClearITPendingBit: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF3C0 0x1003      UBFX     R0,R0,#+4,#+4
   \   00000006   0xFA01 0xF000      LSL      R0,R1,R0
   \   0000000A   0x....             LDR.N    R1,??DataTable3  ;; 0x4000a814
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    220          }
   \   0000000E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x4000A814         DC32     0x4000a814

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x4000BC14         DC32     0x4000bc14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x4000A860         DC32     0x4000a860
    221          
    222          /**
    223            * @}
    224            */
    225          
    226          /**
    227            * @}
    228            */
    229          
    230          /**
    231            * @}
    232            */
    233          
    234          /**
    235            * @}
    236            */
    237            
    238          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   EXTI_ClearITPendingBit
       8   EXTI_DeInit
       0   EXTI_GetITStatus
       8   EXTI_Init
       0   EXTI_StructInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
      16  EXTI_ClearITPendingBit
      32  EXTI_DeInit
      18  EXTI_GetITStatus
     114  EXTI_Init
      16  EXTI_StructInit

 
 208 bytes in section .text
 
 208 bytes of CODE memory

Errors: none
Warnings: none
